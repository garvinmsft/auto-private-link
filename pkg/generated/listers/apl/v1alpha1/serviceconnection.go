// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/garvinmsft/auto-private-link/pkg/apis/apl/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ServiceConnectionLister helps list ServiceConnections.
// All objects returned here must be treated as read-only.
type ServiceConnectionLister interface {
	// List lists all ServiceConnections in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceConnection, err error)
	// ServiceConnections returns an object that can list and get ServiceConnections.
	ServiceConnections(namespace string) ServiceConnectionNamespaceLister
	ServiceConnectionListerExpansion
}

// serviceConnectionLister implements the ServiceConnectionLister interface.
type serviceConnectionLister struct {
	indexer cache.Indexer
}

// NewServiceConnectionLister returns a new ServiceConnectionLister.
func NewServiceConnectionLister(indexer cache.Indexer) ServiceConnectionLister {
	return &serviceConnectionLister{indexer: indexer}
}

// List lists all ServiceConnections in the indexer.
func (s *serviceConnectionLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceConnection, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceConnection))
	})
	return ret, err
}

// ServiceConnections returns an object that can list and get ServiceConnections.
func (s *serviceConnectionLister) ServiceConnections(namespace string) ServiceConnectionNamespaceLister {
	return serviceConnectionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ServiceConnectionNamespaceLister helps list and get ServiceConnections.
// All objects returned here must be treated as read-only.
type ServiceConnectionNamespaceLister interface {
	// List lists all ServiceConnections in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ServiceConnection, err error)
	// Get retrieves the ServiceConnection from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ServiceConnection, error)
	ServiceConnectionNamespaceListerExpansion
}

// serviceConnectionNamespaceLister implements the ServiceConnectionNamespaceLister
// interface.
type serviceConnectionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ServiceConnections in the indexer for a given namespace.
func (s serviceConnectionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ServiceConnection, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ServiceConnection))
	})
	return ret, err
}

// Get retrieves the ServiceConnection from the indexer for a given namespace and name.
func (s serviceConnectionNamespaceLister) Get(name string) (*v1alpha1.ServiceConnection, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("serviceconnection"), name)
	}
	return obj.(*v1alpha1.ServiceConnection), nil
}
